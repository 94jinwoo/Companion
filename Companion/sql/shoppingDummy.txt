use companion
select * from order_state;


use companion;
set foreign_key_checks =0;
drop table product;
set foreign_key_checks=1;

CREATE TABLE IF NOT EXISTS `companion`.`product` (
  `category_id` INT(11) NOT NULL COMMENT '분류ID',
  `product_id` INT(11) NOT NULL COMMENT '상품ID',
  `product_name` VARCHAR(50) NOT NULL COMMENT '상품이름',
  `product_content` TEXT NOT NULL COMMENT '상품설명',
  `product_price` INT(11) NOT NULL COMMENT '상품가격',
  `product_stock` INT(11) NOT NULL COMMENT '상품재고',
  `product_image` VARCHAR(100) NULL DEFAULT NULL COMMENT '상품이미지',
  `product_option1` VARCHAR(50) NULL DEFAULT NULL COMMENT '상품옵션1',
  `product_option2` VARCHAR(50) NULL DEFAULT NULL COMMENT '상품옵션2',
  `product_option3` VARCHAR(50) NULL DEFAULT NULL COMMENT '상품옵션3',
  `product_option4` VARCHAR(50) NULL DEFAULT NULL COMMENT '상품옵션4',
  `product_option5` VARCHAR(50) NULL DEFAULT NULL COMMENT '상품옵션5',
  PRIMARY KEY (`product_id`, `category_id`),
  INDEX `FK_category_product` (`category_id` ASC) ,
  CONSTRAINT `FK_category_product`
    FOREIGN KEY (`category_id`)
    REFERENCES `companion`.`category` (`category_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

DELIMITER $$
DROP PROCEDURE IF EXISTS product$$
CREATE PROCEDURE product()
BEGIN
    DECLARE i INT DEFAULT 1;
    WHILE i <= 10 DO
        INSERT INTO product
          VALUES (100,i,concat('상품이름',i),concat('상품설명',i),concat('7890',i),i,now(),concat('상품이미지',i),concat('상품섬네일',i),concat('상품옵션1',i),concat('상품옵션2',i),concat('상품옵션3',i),concat('상품옵션4',i),concat('상품옵션5',i));
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
call product();

DELIMITER $$
DROP PROCEDURE IF EXISTS product$$
CREATE PROCEDURE product()
BEGIN
    DECLARE i INT DEFAULT 11;
    WHILE i <= 20 DO
        INSERT INTO product
 VALUES (200,i,concat('상품이름',i),concat('상품설명',i),concat('7890',i),i,now(),concat('상품이미지',i),concat('상품섬네일',i),concat('상품옵션1',i),concat('상품옵션2',i),concat('상품옵션3',i),concat('상품옵션4',i),concat('상품옵션5',i));        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
call product();

DELIMITER $$
DROP PROCEDURE IF EXISTS product$$
CREATE PROCEDURE product()
BEGIN
    DECLARE i INT DEFAULT 21;
    WHILE i <= 30 DO
      INSERT INTO product
 VALUES (300,i,concat('상품이름',i),concat('상품설명',i),concat('7890',i),i,now(),concat('상품이미지',i),concat('상품섬네일',i),concat('상품옵션1',i),concat('상품옵션2',i),concat('상품옵션3',i),concat('상품옵션4',i),concat('상품옵션5',i));        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
call product();

DELIMITER $$
DROP PROCEDURE IF EXISTS product$$
CREATE PROCEDURE product()
BEGIN
    DECLARE i INT DEFAULT 31;
    WHILE i <= 40 DO
         INSERT INTO product
 VALUES (400,i,concat('상품이름',i),concat('상품설명',i),concat('7890',i),i,now(),concat('상품이미지',i),concat('상품섬네일',i),concat('상품옵션1',i),concat('상품옵션2',i),concat('상품옵션3',i),concat('상품옵션4',i),concat('상품옵션5',i));        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
call product();

DELIMITER $$
DROP PROCEDURE IF EXISTS product$$
CREATE PROCEDURE product()
BEGIN
    DECLARE i INT DEFAULT 41;
    WHILE i <= 50 DO
      INSERT INTO product
 VALUES (500,i,concat('상품이름',i),concat('상품설명',i),concat('7890',i),i,now(),concat('상품이미지',i),concat('상품섬네일',i),concat('상품옵션1',i),concat('상품옵션2',i),concat('상품옵션3',i),concat('상품옵션4',i),concat('상품옵션5',i));        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
call product();


DELIMITER $$
DROP PROCEDURE IF EXISTS product$$
CREATE PROCEDURE product()
BEGIN
    DECLARE i INT DEFAULT 51;
    WHILE i <= 60 DO
        INSERT INTO product
 VALUES (600,i,concat('상품이름',i),concat('상품설명',i),concat('7890',i),i,now(),concat('상품이미지',i),concat('상품섬네일',i),concat('상품옵션1',i),concat('상품옵션2',i),concat('상품옵션3',i),concat('상품옵션4',i),concat('상품옵션5',i));        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
call product();


DELIMITER $$
DROP PROCEDURE IF EXISTS product$$
CREATE PROCEDURE product()
BEGIN
    DECLARE i INT DEFAULT 61;
    WHILE i <= 70 DO
        INSERT INTO product
 VALUES (700,i,concat('상품이름',i),concat('상품설명',i),concat('7890',i),i,now(),concat('상품이미지',i),concat('상품섬네일',i),concat('상품옵션1',i),concat('상품옵션2',i),concat('상품옵션3',i),concat('상품옵션4',i),concat('상품옵션5',i));        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
call product();







insert into `order` values ('회원0',);



select * from member;
select * from cart;
select * from product;
select * from order_detail;
select * from order_state;


DELIMITER $$
DROP PROCEDURE IF EXISTS `order`$$
CREATE PROCEDURE `order`()
BEGIN
    DECLARE i INT DEFAULT 1;
    WHILE i <= 60 DO
        INSERT INTO `order`
          VALUES (i,concat('회원',i),now(),concat('1000',i),concat('주문수령인',i),concat('주문수령인일반전화',i),concat('주문수령인휴대전화',i),concat('주문주소1',i),concat('주문주소2',i),concat('주문주소3',i),concat('주문배송메세지',i),0);
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
CALL `order`;

select * from `order`;

select * from product;

DELIMITER $$
DROP PROCEDURE IF EXISTS order_detail$$
CREATE PROCEDURE order_detail()
BEGIN
    DECLARE i INT DEFAULT 1;
    WHILE i <= 10 DO
        INSERT INTO order_detail
          VALUES(default,i,i,concat('1000',i),i);
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
CALL order_detail;

select * from order_detail;
commit;
select * from member;
select * from cart;
select * from product;



DELIMITER $$
DROP PROCEDURE IF EXISTS cart$$
CREATE PROCEDURE cart()
BEGIN
    DECLARE i INT DEFAULT 1;
    WHILE i <= 10 DO
        INSERT INTO cart
          VALUES(i,concat('회원',i),i,default);
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
CALL cart;
select * from cart;
--payment의 예약 id는 삭제했음.
select * from payment_method;
select * from payment_state;

insert into payment_method values (0,'카카오페이');
insert into payment_method values (1,'카드결제');
insert into payment_method values (2,'무통장입금');
insert into payment_method values (3,'실시간계좌이체');
insert into payment_method values (4,'핸드폰결제');

insert into payment_state values (0,'입금대기');
insert into payment_state values (1,'결제확인');
insert into payment_state values (2,'결제완료');

select * from `order`;
select * from member;
select * from payment_method;
select * from payment_state;

DELIMITER $$
DROP PROCEDURE IF EXISTS payment$$
CREATE PROCEDURE payment()
BEGIN
    DECLARE i INT DEFAULT 1;
    WHILE i <= 10 DO
        INSERT INTO payment
          VALUES (default,i,concat('회원',i),now(),concat('1000',i),1,1);
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
CALL payment;

select * from payment;

commit;




DELIMITER $$
DROP PROCEDURE IF EXISTS question$$
CREATE PROCEDURE question()
BEGIN
    DECLARE i INT DEFAULT 1;
    WHILE i <= 10 DO
        INSERT INTO question
          VALUES (default,0,i,i,concat('회원',i),now(),null,concat('문의제목',i),concat('문의내용',i),null,concat('문의답변내용',i),default,default);
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
CALL question;

DELIMITER $$
DROP PROCEDURE IF EXISTS question$$
CREATE PROCEDURE question()
BEGIN
    DECLARE i INT DEFAULT 11;
    WHILE i <= 30 DO
        INSERT INTO question
          VALUES (default,5,i,i,concat('회원',i),now(),null,concat('문의제목',i),concat('문의내용',i),null,concat('문의답변내용',i),default,default);
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
CALL question;

select * from question;
DELIMITER $$
DROP PROCEDURE IF EXISTS question$$
CREATE PROCEDURE question()
BEGIN
    DECLARE i INT DEFAULT 31;
    WHILE i <= 60 DO
        INSERT INTO question
          VALUES (default,100,i,i,concat('회원',i),now(),null,concat('문의제목',i),concat('문의내용',i),null,concat('문의답변내용',i),default,default);
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
CALL question;

  INSERT INTO question VALUES (default,5,1,5,'회원1','2020-03-01',null,'문의제목123','문의내용46',null,'문의답변내용126',default,default);
 INSERT INTO question VALUES (default,6,8,7,'회원1','2020-02-01',null,'문의제목123','문의내용46',null,'문의답변내용126',default,default);
 INSERT INTO question VALUES (default,8,21,4,'회원1','2020-01-01',null,'문의제목123','문의내용46',null,'문의답변내용126',default,default);









DELIMITER $$
DROP PROCEDURE IF EXISTS member$$
CREATE PROCEDURE member()
BEGIN
    DECLARE i INT DEFAULT 1;
    WHILE i <= 60 DO
        INSERT INTO member(member_id,member_pw,member_name,member_tel,member_phone,member_email,member_addr1,member_addr2,member_addr3,member_grade)
          VALUES(concat('회원',i), concat('회원PW',i), concat('회원이름',i),concat('회원일반전화',i),concat('회원휴대전화',i),concat('이메일주소',i),concat('회원주소1',i),concat('회원주소2',i),concat('회원주소3',i),2);
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
CALL member;
commit;



//이용후기 게시판 용
DELIMITER $$
DROP PROCEDURE IF EXISTS orderArticle$$
CREATE PROCEDURE orderArticle()
BEGIN
    DECLARE i INT DEFAULT 1;
    WHILE i <= 70 DO
        INSERT INTO article 
          VALUES (3,default, concat('회원이름',i),concat('이용후기',i),concat('이용후기의 내용',i),now(),0,null,null);
        SET i = i + 1;
    END WHILE;
END$$
DELIMITER $$
CALL orderArticle;
commit;






