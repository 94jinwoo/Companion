<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="product">

	<!-- 그냥 order By= #{value} 처리할 경우 -->
	<select id="ProductOrderByValue" resultType="productBean">
		select * from product where category_id=#{category_id} order by #{value};
	</select>
	
	<!--상품 추천순 정렬-->
	<select id="productOrderByProductLike" resultType="productBean" parameterType="hashMap">
		 select distinct product.*,(select count(*) from `like` where product.product_id=`like`.product_id) as like_id
		  from product left join `like` on product.product_id=`like`.product_id 
		  where product.category_id=#{category_id} order by like_id desc limit #{displayPost},#{postNum};
	</select>
	
	<!-- 상품 판매인기순 -->
	<select id="productOrderBySellingOrder" resultType="productBean" parameterType="hashMap">
		select * from product 
		left join order_detail 
		on
		 product.product_id=order_detail.product_id where product.category_id=#{category_id}
		  order by order_detail.order_detail_quantity desc limit #{displayPost},#{postNum}; 
	</select>
	
<!-- 	상품 낮은 가격순 -->
	<select id="productOrderByLowPrice" resultType="productBean" parameterType="hashMap">
		select * from product where category_id=#{category_id} order by product_price limit #{displayPost},#{postNum};
	</select>
	
	<!-- 상품 높은 가격순 -->
	<select id="productOrderByHighPrice" resultType="productBean" parameterType="hashMap">
		select * from product where category_id=#{category_id} order by product_price desc limit #{displayPost},#{postNum};
	</select>
	<!-- 상품 등록일 순 -->
	<select id="productOrderByDate" resultType="productBean" parameterType="hashMap">
		select * from product where category_id=#{category_id} order by product_date desc limit #{displayPost},#{postNum};
	</select>
	
	 <!-- 모든 상품 목록 데이터 가져오는 곳.   -->
  	<select id="ProductSelectAll" resultType="productBean">
	  	select (a.category_id, a.product_id, a.product_name, a.product_content, a.product_price, a.product_stock, a.product_date, 
	  	a.product_image, a.product_thumb, a.product_option1, a.product_option2, a.product_option3, a.product_option4, 
	  	a.product_option5,b.product_id, b.like_id, b.member_id from `product` as a left join `like` as b on a.product_id=b.product_id) 
	  	union select (a.like_id, a.member_id, a.product_id,b.category_id, b.product_id, b.product_name, b.product_content, b.product_price, 
	  	b.product_stock, b.product_date, b.product_image, b.product_thumb, b.product_option1, b.product_option2, b.product_option3, 
	  	b.product_option4, b.product_option5 from `like` as a left join `product` as b on a.product_id=b.product_id);
  	</select> 
  	
  	<!-- 상세 페이지  -->
  	<select id="ProductDetailOne" resultType="productBean" parameterType="int">
		select distinct product.*,(select count(*) from `like` 
		where product.product_id=`like`.product_id) as like_id from product left join`like` 
		on product.product_id=`like`.product_id where product.product_id=#{value};
	</select>
	<!--  카테고리별 기본 페이지 -->
	<select id="ProductCategorySelect" resultType="productBean" parameterType="int">
	  	select distinct product.*,(select count(*) from 
	  	`like` where product.product_id=`like`.product_id) as like_id from product left join`like` 
	  	on product.product_id=`like`.product_id where product.category_id=#{category_id};
  	</select> <!-- listpage도 그대로 가져와야함. -->
  	
<!-- 페이징 START -->
	
	<!-- 상품 총 개수 -->
	<select id="count" resultType="int" parameterType="int">
		select count(*) from product where category_id=#{category_id};
	</select>
	
	<!-- 4.10  -->
	<!-- 게시물을 10개씩 출력하는 쿼리.  -->
	<!-- HashMap TEST  -->
	<select id="ListPage" resultType="productBean" parameterType="hashMap" >
	select distinct product.*,(select count(*) from 
	  	`like` where product.product_id=`like`.product_id) as like_id from product left join`like` 
	  	on product.product_id=`like`.product_id where product.category_id=#{category_id} order by product_id limit #{displayPost},#{postNum};
	</select>
<!-- 페이징 END -->
	
	<!--  이용후기 -->
	<select id="ProductReview" resultType="productBean" parameterType="int">
		select * from `article` where board_id=3 and product_id=#{value};	
	</select>
	
	<!-- 선택 상품의 추천수가 0일 경우 랜덤 상품이 추천 됨.  -->
	<!-- 추천상품목록 구현  -->
	<select id="ProductRecommendList" resultType="productBean" parameterType="int">
		select product_id,order_id,(select product_thumb from product where product_id=#{product_id}) from `order_detail` 
		where order_id = (select order_id from `order` where member_id 
		in (select member_id from `like` where product_id=#{product_id}) is not null limit 1) 
		is not null group by product_id order by rand() limit 5;
	</select>
	
	
</mapper>
  
